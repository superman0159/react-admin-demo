{"version":3,"sources":["Components/Header/index.jsx","Components/Menu/index.jsx","Components/Footer/index.jsx","pages/Out/index.jsx","Components/Info/index.jsx","Api/ajax.js","Api/index.js","Store/actionCreators.js","Store/action-Types.js","Components/Login/index.jsx","Components/Echarts/EchartsOne.jsx","Components/Echarts/EchartsTwo.jsx","Components/Echarts/EchartsThree.jsx","pages/Echarts/Echarts.jsx","pages/Echarts/router.jsx","Components/TextModal/index.jsx","pages/Home/AdminList.jsx","pages/Home/router.jsx","pages/User/UserList.jsx","pages/User/router.jsx","pages/Order/OrderList.jsx","pages/Order/router.jsx","pages/Shopping/ShopList.jsx","pages/Shopping/AddShop.jsx","pages/Shopping/ShopDiscountList.jsx","pages/Shopping/router.jsx","pages/Discount/DiscountList.jsx","pages/Discount/AddDiscount.jsx","pages/Discount/router.jsx","pages/Remove/Remove.jsx","pages/Remove/router.jsx","App.js","serviceWorker.js","Store/reducer.js","Store/index.js","index.js"],"names":["Header","menu","Item","key","target","rel","onClick","sessionStorage","removeItem","index","className","style","background","padding","overlay","href","type","Component","Sider","SubMenu","props","onCollapse","collapsed","console","log","setState","state","collapsible","this","theme","defaultSelectedKeys","mode","to","title","Footer","textAlign","Content","minHeight","margin","children","error","description","message","warning","ajax","promise","url","params","Promise","resolve","reject","toUpperCase","Parametr","Object","keys","forEach","substr","lastIndexOf","axios","get","post","then","response","catch","err","BASE_URL","addAdminData","ajaxs","removeAdminData","id","isAddShopData","LoginAction","data","callback","dispatch","res","status_code","payload","token","AdminAction","result","ShopListAction","ShopDisListAction","ShopSaleAction","S_TOKEN","Index","handleSubmit","e","preventDefault","form","validateFields","values","username","password","md5","loginParams","URLSearchParams","append","_LoginAdmin","code","history","push","getFieldDecorator","rules","required","prefix","color","placeholder","maxLength","WrappedNormalLoginForm","create","name","connect","Test","echarts","init","document","getElementById","setOption","text","x","tooltip","trigger","formatter","legend","orient","left","series","radius","center","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","width","height","React","avoidLabelOverlap","label","normal","show","position","textStyle","fontSize","fontWeight","labelLine","dataset","source","xAxis","gridIndex","yAxis","grid","bottom","top","seriesLayoutBy","xAxisIndex","yAxisIndex","Echarts","span","EchartsOne","EchartsTwo","EchartsThree","ShopRouter","path","component","exact","confirm","showConfirm","record","okText","okType","cancelText","onOk","onCancel","Column","Option","formItemLayout","labelCol","xs","sm","wrapperCol","Edit","Delete","_id","reqAdminData","onChange","page","current","showModal","visible","handleOk","adminname","adminrole","admincode","adminpwd","handleCancel","adminlist","item","_onInputChange","_onSelectChange","defaultValue","dataSource","pagination","pageSize","total","dataIndex","render","size","f","inputValue","inputName","AdminList","usercode","phone","time","UserList","ordernum","ordername","salecode","orderemail","orderprice","ordercode","DiscountRouter","OrderList","shophandleCancel","shopvisible","Add","shopcode","shopname","shopitem","date","dateString","shopdiscounttime","shopdiscountnum","shopdiscountcell","refs","ShopCodeParams","shoppingshow","formData","FormData","_ShopListData","shopList","dayjs","format","shopdiscountList","disabled","ShopShelf","Stop","min","ref","marginBottom","help","display","shophandleOk","shopprice","shopaddress","TextArea","shopsaleprice","shopdefaultnum","shopdaynum","shopdetail","autosize","minRows","maxRows","_dealWithClick","shopfile","files","shopDisList","_ShopDisListData","ShopList","AddShop","ShopDiscountList","shopSaleList","shopsaleList","_ShopSaleData","checkedValues","saleisarr","onTimeChange","saletime","saleprice","salenum","ListData","filter","plainOptions","Group","options","salename","saleobj","ShopSaleParams","DiscountList","AddDiscount","Search","wechat","placecode","price","enterButton","onSearch","RemoveRouter","Remove","App","_Login","Admin","User","Order","Shopping","Discount","Login","admin","JSON","parse","getItem","Boolean","window","location","hostname","match","initvalState","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","action","newstate","stringify","setItem","adminstate","shopliststate","shopdisliststate","shopsalestate","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d18c4f4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Layout, Menu, Dropdown, Icon } from 'antd';\r\nimport './index.scss';\r\nconst { Header } = Layout;\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => { sessionStorage.removeItem('userData') }}>\r\n        注销\r\n      </a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\nexport default class index extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header className=\"header\" style={{ background: '#fff', padding: 0 }} >\r\n          <h1 className=\"title\">Health loving</h1>\r\n          <Dropdown overlay={menu} className=\"logo-in\">\r\n            <a className=\"ant-dropdown-link\" href=\"#\">\r\n              <Icon type=\"user\" /> 用户设置\r\n            </a>\r\n          </Dropdown>\r\n        </Header>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport './index.scss';\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      collapsed: false,\r\n    }\r\n  }\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n  render() {\r\n    return (\r\n      <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n        <div className=\"layout-logo\">\r\n          <img className=\"logo-img\" />\r\n        </div>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['0']} mode=\"inline\">\r\n          <Menu.Item key=\"0\">\r\n            <Link to='/'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>可视化</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <Link to='/home'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>系统管理</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Link to='/user/list'>\r\n              <Icon type=\"desktop\" />\r\n              <span>用户管理</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"user\" />\r\n                <span>订单管理</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"3\">\r\n              <Link to='/order/list'>订单列表</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\">待支付订单</Menu.Item>\r\n            <Menu.Item key=\"5\">已完成订单</Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu\r\n            key=\"sub2\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"fund\" />\r\n                <span>商品管理</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"7\">\r\n              <Link to='/shop/list'>商品列表</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"8\">\r\n              <Link to='/shop/add'>添加商品</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"9\">\r\n              <Link to='/shop/discount/list'>商品券码列表</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu\r\n            key=\"sub3\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"team\" />\r\n                <span>运营管理</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"11\">\r\n              <Link to='/discount/list'>\r\n                抵扣券管理\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"12\">\r\n              <Link to='/discount/add'>\r\n                抵扣券生成\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item key=\"13\">\r\n            <Link to='/remove/item'>\r\n              <Icon type=\"pie-chart\" />\r\n              <span>优惠券核销</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n              <Footer className=\"html\" style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd';\r\n\r\nimport Header from './../../Components/Header';\r\nimport Menu from './../../Components/Menu';\r\nimport Footer from './../../Components/Footer';\r\nconst { Content } = Layout;\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Menu />\r\n                <Layout>\r\n                    <Header />\r\n                    <Content style={{ margin: '0 16px' }}>\r\n                        {this.props.children}\r\n                    </Content>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import { message } from 'antd';\r\n\r\nexport const success = (description) => {\r\n    message.success(description);\r\n};\r\n\r\nexport const error = (description) => {\r\n    message.error(description);\r\n};\r\n\r\nexport const warning = (description) => {\r\n    message.warning(description);\r\n};\r\n","import axios from 'axios'\r\n\r\nexport default function ajax(url = \"\", params = {}, type = \"GET\") {\r\n    let promise;\r\n    return new Promise((resolve, reject) => {\r\n        if (\"GET\" === type.toUpperCase()) {\r\n            let Parametr = \"\";\r\n            Object.keys(params).forEach(keys => {\r\n                Parametr += keys + \"=\" + params[keys] + \"&\"\r\n            })\r\n            if (Parametr !== '') {\r\n                Parametr = Parametr.substr(0, Parametr.lastIndexOf('&'))\r\n            }\r\n            url += \"?\" + Parametr;\r\n            promise = axios.get(url)\r\n        }\r\n        else if (\"POST\" === type.toUpperCase()) {\r\n            promise = axios.post(url, params)\r\n        }\r\n        promise.then((response) => {\r\n            resolve(response)\r\n        }).catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}","import ajaxs from \"./ajax\";\r\n\r\nconst BASE_URL = \"http://server.hanrenhui.cn:1888\";\r\n\r\n//Admin Login\r\nexport const GetAdmin = params => ajaxs(BASE_URL + \"/c/login\", params, \"POST\");\r\n//请求管理员列表\r\nexport const GetAdminData = () => ajaxs(BASE_URL + \"/c/leaderlist\");\r\n//添加管理员\r\nexport const addAdminData = params =>\r\n  ajaxs(BASE_URL + \"/c/add/leaderlist\", params, \"POST\");\r\n//删除一条管理员\r\nexport const removeAdminData = id => ajaxs(BASE_URL + \"/c/leader/remove/\" + id);\r\n// //添加一条商品\r\nexport const addShopData = params =>\r\n  ajaxs(BASE_URL + \"/c/add/shoppinglist\", params, \"POST\");\r\n//获取商品列表\r\nexport const GetShopListData = () => ajaxs(BASE_URL + \"/c/shoppinglist\");\r\n//获取商品券码列表\r\nexport const GetShopDiscountListData = () =>\r\n  ajaxs(BASE_URL + \"/c/shopdiscountlist\");\r\n// 添加商品对应券码\r\nexport const addShopDiscountData = params =>\r\n  ajaxs(BASE_URL + \"/c/add/shopingdiscount\", params, \"POST\");\r\n// 是否上架\r\nexport const isAddShopData = params =>\r\n  ajaxs(BASE_URL + \"/c/shop/edit\", params, \"POST\");\r\n// 添加商品优惠券\r\nexport const addShopSaleData = params =>\r\n  ajaxs(BASE_URL + \"/c/add/shopsalelist\", params, \"POST\");\r\n//获取抵扣券列表\r\nexport const GetShopSaleListData = () => ajaxs(BASE_URL + \"/c/shopp/sale/list\");\r\n","import * as Types from \"./action-Types\";\r\nimport { error } from \"../Components/Info\";\r\nimport {\r\n  GetAdmin,\r\n  GetAdminData,\r\n  GetShopListData,\r\n  GetShopDiscountListData,\r\n  GetShopSaleListData\r\n} from \"./../Api/index\";\r\n\r\n// 获取首页数据\r\n// export const getHomeAction = (homeDate) => ({\r\n//     type: contents.INIT_HOME_DATA,\r\n//     homeDate\r\n// })\r\n//登陆\r\nexport const LoginAction = (data, callback) => {\r\n  return dispatch => {\r\n    GetAdmin(data)\r\n      .then(res => {\r\n        if (res.data.status_code === 1) {\r\n          const payload = res.data.message;\r\n          dispatch({\r\n            type: Types.ADMIN_LOGIN,\r\n            payload\r\n          });\r\n          callback && callback(payload.token);\r\n        } else {\r\n          error(\"用户名或密码输入错误，请重新输入\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        error(\"用户数据请求错误,请刷新重试\");\r\n      });\r\n  };\r\n};\r\n\r\n// 获取首页管理员列表数据\r\nexport const AdminAction = callback => {\r\n  return dispatch => {\r\n    GetAdminData()\r\n      .then(res => {\r\n        if (res.data.status_code === 200) {\r\n          const payload = res.data.result;\r\n          dispatch({\r\n            type: Types.ADMIN_LIST,\r\n            payload\r\n          });\r\n          callback && callback(true);\r\n        } else {\r\n          error(\"首页数据请求失败\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        // 数据还未完全封装好 现在只做简单的数据劫持\r\n        error(\"首页数据请求失败！\");\r\n      });\r\n  };\r\n};\r\n\r\n// 获取商品列表列表数据\r\nexport const ShopListAction = () => {\r\n  return dispatch => {\r\n    GetShopListData()\r\n      .then(res => {\r\n        if (res.data.status_code === 200) {\r\n          const payload = res.data.result;\r\n          dispatch({\r\n            type: Types.SHOP_LIST,\r\n            payload\r\n          });\r\n        } else {\r\n          error(\"商品数据请求失败\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        // 数据还未完全封装好 现在只做简单的数据劫持\r\n        error(\"商品数据请求失败！\");\r\n      });\r\n  };\r\n};\r\n\r\n// 获取商品券码列表列表数据\r\nexport const ShopDisListAction = () => {\r\n  return dispatch => {\r\n    GetShopDiscountListData()\r\n      .then(res => {\r\n        if (res.data.status_code === 200) {\r\n          const payload = res.data.result;\r\n          dispatch({\r\n            type: Types.SHOP_DISCOUNT_LIST,\r\n            payload\r\n          });\r\n        } else {\r\n          error(\"券码数据请求失败\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        // 数据还未完全封装好 现在只做简单的数据劫持\r\n        error(\"券码数据请求失败！\");\r\n      });\r\n  };\r\n};\r\n\r\n// 获取商品抵扣券列表数据\r\nexport const ShopSaleAction = () => {\r\n  return dispatch => {\r\n    GetShopSaleListData()\r\n      .then(res => {\r\n        if (res.data.status_code === 200) {\r\n          const payload = res.data.result;\r\n          dispatch({\r\n            type: Types.SHOP_SALE_LIST,\r\n            payload\r\n          });\r\n        } else {\r\n          error(\"抵扣券数据请求失败\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        // 数据还未完全封装好 现在只做简单的数据劫持\r\n        error(\"抵扣券数据请求失败！\");\r\n      });\r\n  };\r\n};\r\n\r\n","export const ADMIN_LOGIN = \"admin_login\" //Admin登陆验证\r\nexport const ADMIN_LIST = \"admin_list\" //管理员列表数据获取\r\nexport const SHOP_LIST = \"shop_list\" //商品列表数据获取\r\nexport const SHOP_DISCOUNT_LIST = \"shop_discount_list\" //商品券码列表数据获取\r\nexport const SHOP_SALE_LIST = \"shop_sale_list\" //商品抵扣券列表数据获取","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LoginAction } from './../../Store/actionCreators';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport md5 from 'md5'\r\nimport './index.scss';\r\n\r\nconst S_TOKEN = 'WoShiDaShuaiGe.ChaoJiShuai.Com'\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    //获取数据\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let username = values.username, // 用户名\r\n                    password = md5(values.password + S_TOKEN); // 密码\r\n                // 加密 md5\r\n\r\n                let loginParams = new URLSearchParams();\r\n                loginParams.append('username', username)\r\n                loginParams.append('password', password)\r\n\r\n                this.props._LoginAdmin(loginParams, (code) => {\r\n                    console.log(code)\r\n                    if (code.token !== '') {\r\n                        this.props.history.push('/')\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"login-container\">\r\n                <Form className=\"login-form\">\r\n                    <div className=\"login-logo\">\r\n                        {/* <img src={Config.logoSrc} /> */}\r\n                        <span>Admin Login</span>\r\n                    </div>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: '请输入用户名!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: '请输入密码!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                maxLength={8}\r\n                            /> ,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button onClick={this.handleSubmit} type=\"primary\" className=\"login-form-button\" >\r\n                            登陆\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        _LoginAdmin(data, callback) {\r\n            dispatch(LoginAction(data, callback))\r\n        }\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Index);\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(WrappedNormalLoginForm)\r\n","import React from 'react';\r\nimport echarts from 'echarts';\r\n\r\nclass Test extends React.Component {\r\n    componentDidMount() {\r\n        // 初始化\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title : {\r\n                text: '系统权限分配明细',\r\n                // subtext: '纯属虚构',\r\n                x:'center'\r\n            },\r\n            tooltip : {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['超级管理员','运营人员','核销人员',]\r\n            },\r\n            series : [\r\n                {\r\n                    name: '所属统计',\r\n                    type: 'pie',\r\n                    radius : '55%',\r\n                    center: ['50%', '60%'],\r\n                    data:[\r\n                        {value:1, name:'超级管理员'},\r\n                        {value:2, name:'运营人员'},\r\n                        {value:3, name:'核销人员'},\r\n                    ],\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"main\" style={{ width: '100%', height: 300 }}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport echarts from 'echarts';\r\n\r\nclass Test extends React.Component {\r\n    componentDidMount() {\r\n        // 初始化\r\n        var myChart = echarts.init(document.getElementById('main1'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title : {\r\n                text: '系统产品列表明细',\r\n                // subtext: '纯属虚构',\r\n                x:'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                x: 'left',\r\n                data:['屈成氏','肯德基','麦当劳','正新鸡排','一点点']\r\n            },\r\n            series: [\r\n                {\r\n                    name:'所属统计',\r\n                    type:'pie',\r\n                    radius: ['50%', '70%'],\r\n                    avoidLabelOverlap: false,\r\n                    label: {\r\n                        normal: {\r\n                            show: false,\r\n                            position: 'center'\r\n                        },\r\n                        emphasis: {\r\n                            show: true,\r\n                            textStyle: {\r\n                                fontSize: '30',\r\n                                fontWeight: 'bold'\r\n                            }\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    data:[\r\n                        {value:335, name:'屈成氏'},\r\n                        {value:310, name:'肯德基'},\r\n                        {value:234, name:'麦当劳'},\r\n                        {value:135, name:'正新鸡排'},\r\n                        {value:1548, name:'一点点'}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"main1\" style={{ width: '100%', height: 300 }}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport echarts from 'echarts';\r\n\r\nclass Test extends React.Component {\r\n    componentDidMount() {\r\n        // 初始化\r\n        var myChart = echarts.init(document.getElementById('main2'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: {\r\n                text: '系统产品细节明细',\r\n                // subtext: '纯属虚构',\r\n                x: 'left'\r\n            },\r\n            legend: {\r\n                \r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n            },\r\n            dataset: {\r\n                source: [\r\n                    ['product', '2017', '2018', '2019', '2020'],\r\n                    ['Matcha Latte', 41.1, 30.4, 65.1, 53.3],\r\n                    ['Milk Tea', 86.5, 92.1, 85.7, 83.1],\r\n                    ['Cheese Cocoa', 24.1, 67.2, 79.5, 86.4]\r\n                ]\r\n            },\r\n            xAxis: [\r\n                { type: 'category', gridIndex: 0 },\r\n                { type: 'category', gridIndex: 1 }\r\n            ],\r\n            yAxis: [\r\n                { gridIndex: 0 },\r\n                { gridIndex: 1 }\r\n            ],\r\n            grid: [\r\n                { bottom: '55%' },\r\n                { top: '55%' }\r\n            ],\r\n            series: [\r\n                // These series are in the first grid.\r\n                { type: 'bar', seriesLayoutBy: 'row' },\r\n                { type: 'bar', seriesLayoutBy: 'row' },\r\n                { type: 'bar', seriesLayoutBy: 'row' },\r\n                // These series are in the second grid.\r\n                { type: 'bar', xAxisIndex: 1, yAxisIndex: 1 },\r\n                { type: 'bar', xAxisIndex: 1, yAxisIndex: 1 },\r\n                { type: 'bar', xAxisIndex: 1, yAxisIndex: 1 },\r\n                { type: 'bar', xAxisIndex: 1, yAxisIndex: 1 }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"main2\" style={{ width: 'auto', height: 500}}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react'\r\nimport './../index.scss';\r\nimport { Row, Col, Card } from 'antd';\r\nimport EchartsOne from './../../Components/Echarts/EchartsOne'\r\nimport EchartsTwo from './../../Components/Echarts/EchartsTwo'\r\nimport EchartsThree from './../../Components/Echarts/EchartsThree'\r\n\r\nexport default class Echarts extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <Card className=\"mg-top\">\r\n                            <Col span={12}>\r\n                                <EchartsOne />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <EchartsTwo />\r\n                            </Col>\r\n                        </Card>\r\n                        <Card className=\"mg-top\" >\r\n                            <Col span={24}>\r\n                                <EchartsThree />\r\n                            </Col>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// 页面\r\nimport Echarts from './Echarts';\r\n\r\nclass ShopRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" component={Echarts}/>\r\n                <Redirect exact form=\"/\" to=\"/\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopRouter;","import { Modal } from 'antd';\r\n\r\nconst { confirm } = Modal;\r\n\r\nexport default function showConfirm(record, callback) {\r\n    confirm({\r\n        title: '你确定要执行删除操作?',\r\n        okText: 'Yes',\r\n        okType: 'danger',\r\n        cancelText: 'No',\r\n        onOk() {\r\n            callback && callback()\r\n            // console.log('OK');\r\n        },\r\n        onCancel() {\r\n            // console.log('Cancel');\r\n        },\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport showConfirm from './../../Components/TextModal';\r\nimport { error } from './../../Components/Info';\r\nimport { AdminAction } from './../../Store/actionCreators';\r\nimport { addAdminData, removeAdminData } from './../../Api';\r\nimport { connect } from 'react-redux';\r\nimport './../index.scss';\r\nimport { Row, Col, Card, Table, Divider, Select, Button, Modal, Form, Input } from 'antd';\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: 1,\r\n            visible: false,\r\n            adminname: '',\r\n            adminrole: '运营人员',\r\n            code: '1',\r\n            admincode: '',\r\n            adminpwd: '',\r\n        }\r\n    }\r\n    //编辑管理员\r\n    Edit = (record) => {\r\n        console.log(record)\r\n    }\r\n    //删除管理员\r\n    Delete = (record) => {\r\n        const { _id } = record;\r\n        showConfirm(record, () => {\r\n            removeAdminData(_id).then(res=>{\r\n                if(res.data.status_code === 200){\r\n                    this.props.reqAdminData()\r\n                }\r\n            }).catch(err=>{\r\n                error('删除数据失败')\r\n            })\r\n        })\r\n    }\r\n    //处理分页\r\n    onChange = page => {\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    };\r\n    //模态框处理\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    //提交管理员\r\n    handleOk = e => {\r\n        const { adminname, adminrole, admincode, adminpwd } = this.state;\r\n        if (adminname === '' || adminrole === '' || admincode === '' || adminpwd === '') {\r\n            error('请填写完整信息')\r\n        }\r\n        console.log(adminname, adminrole, admincode, adminpwd)\r\n        let loginParams = new URLSearchParams();\r\n        loginParams.append('adminname', adminname)\r\n        loginParams.append('adminrole', adminrole)\r\n        loginParams.append('admincode', admincode)\r\n        loginParams.append('adminpwd', adminpwd)\r\n        console.log(this.props.history)\r\n        addAdminData(loginParams).then((res) => {\r\n            if (res.data.status_code === 200) {\r\n                this.setState({\r\n                    visible: false,\r\n                }, () => {\r\n                    this.props.reqAdminData()\r\n                });\r\n            } else {\r\n                error('添加管理员失败')\r\n            }\r\n        })\r\n    };\r\n    handleCancel = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { adminlist } = this.props;\r\n        adminlist.forEach((item, index) => {\r\n            item.key = index + 1\r\n        })\r\n        const { adminname, code, admincode, adminpwd } = this.state;\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" title=\"管理员权限\">\r\n                            <Button type=\"primary\" onClick={this.showModal}>添加管理员</Button>\r\n                            <Modal\r\n                                title=\"添加管理员明细\"\r\n                                visible={this.state.visible}\r\n                                onOk={this.handleOk}\r\n                                onCancel={this.handleCancel}\r\n                            >\r\n                                <Form {...formItemLayout}>\r\n                                    <Form.Item label=\"管理员名称\">\r\n                                        <Input placeholder=\"请输入管理员名称\" name=\"adminname\" value={adminname} onChange={(e) => this._onInputChange(e)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"角色\">\r\n                                        <Select\r\n                                            onChange={(e) => this._onSelectChange(e)}\r\n                                            defaultValue={code}\r\n                                        >\r\n                                            <Option value=\"1\">运营人员</Option>\r\n                                            <Option value=\"2\">核销人员</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"账号\">\r\n                                        <Input placeholder=\"请输入管理员账号\" name=\"admincode\" value={admincode} onChange={(e) => this._onInputChange(e)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"密码\">\r\n                                        <Input placeholder=\"请输入管理员密码\" name=\"adminpwd\" value={adminpwd} onChange={(e) => this._onInputChange(e)} />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Modal>\r\n                        </Card>\r\n                        <Card className=\"mg-top\" title=\"管理成员明细列表\">\r\n                            <Table\r\n                                dataSource={adminlist}\r\n                                pagination={{\r\n                                    current: this.state.current,\r\n                                    pageSize: 6,\r\n                                    total: 30,\r\n                                    onChange: this.onChange\r\n                                }}\r\n                            >\r\n                                <Column title=\"姓名\" dataIndex=\"adminname\" key=\"adminname\" />\r\n                                <Column title=\"角色\" dataIndex=\"adminrole\" key=\"adminrole\" />\r\n                                <Column title=\"管理账号\" dataIndex=\"admincode\" key=\"admincode\" />\r\n                                <Column title=\"密码\" dataIndex=\"adminpwd\" key=\"adminpwd\" />\r\n                                <Column title=\"创建时间\" dataIndex=\"time\" key=\"time\" />\r\n                                <Column\r\n                                    title=\"操作\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <span>\r\n                                            <Button size=\"small\" type=\"primary\" onClick={() => this.Edit(record)}>编辑 </Button>\r\n                                            <Divider type=\"vertical\" />\r\n                                            <Button size=\"small\" type=\"danger\" onClick={() => this.Delete(record)}>删除</Button>\r\n                                        </span>\r\n                                    )}\r\n                                />\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n    // g获取输入框\r\n    _onInputChange(e, f) {\r\n        // 1.1 获取用户输入的数据\r\n        let inputValue = e.target.value;\r\n        let inputName = e.target.name;\r\n        // 更新状态机\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n    //多选\r\n    _onSelectChange(e) {\r\n        let adminrole;\r\n        if (e === '2') {\r\n            adminrole = '核销人员'\r\n        } else if (e === '1') {\r\n            adminrole = '运营人员'\r\n        }\r\n        this.setState({ adminrole })\r\n    }\r\n    componentDidMount() {\r\n        this.props.reqAdminData()\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        adminlist: state.adminlist\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        reqAdminData(callback) {\r\n            dispatch(AdminAction(callback))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(index);\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// 页面\r\nimport AdminList from './AdminList';\r\n\r\nclass ShopRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/home\" component={AdminList}/>\r\n                <Redirect exact form=\"/home\" to=\"/home\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopRouter;","import React, { Component } from 'react'\r\nimport showConfirm from './../../Components/TextModal';\r\nimport './../index.scss';\r\nimport { Row, Col, Card, Table, Divider, Button } from 'antd';\r\n\r\nconst { Column } = Table;\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        usercode: 'WeChat',\r\n        username: '张三',\r\n        phone: '13543675428',\r\n        time: '2019-1-1',\r\n    },\r\n    {\r\n        key: '2',\r\n        usercode: 'WeChat',\r\n        username: '3李四',\r\n        phone: '13543675428',\r\n        time: '2019-1-1',\r\n    },\r\n];\r\n\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: 1,\r\n        }\r\n    }\r\n    //编辑用户\r\n    Edit = (record) => {\r\n        console.log(record)\r\n    }\r\n    //删除用户\r\n    Delete = (record) => {\r\n        showConfirm(record)\r\n        console.log(record)\r\n    }\r\n    //处理分页\r\n    onChange = page => {\r\n        console.log(page);\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" title=\"用户明细列表\">\r\n                            <Table\r\n                                dataSource={data}\r\n                                pagination={{\r\n                                    current: this.state.current,\r\n                                    pageSize: 6,\r\n                                    total: 30,\r\n                                    onChange: this.onChange\r\n                                }}\r\n                            >\r\n                                <Column title=\"微信昵称\" dataIndex=\"usercode\" key=\"usercode\" />\r\n                                <Column title=\"登陆账号\" dataIndex=\"username\" key=\"username\" />\r\n                                <Column title=\"注册日期\" dataIndex=\"time\" key=\"time\" />\r\n                                <Column title=\"邮箱号码\" dataIndex=\"phone\" key=\"phone\" />\r\n                                <Column\r\n                                    title=\"操作\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <span>\r\n                                            <Button size=\"small\" type=\"primary\" onClick={() => this.Edit(record)}>编辑 </Button>\r\n                                            <Divider type=\"vertical\" />\r\n                                            <Button size=\"small\" type=\"danger\" onClick={() => this.Delete(record)}>禁用</Button>\r\n                                        </span>\r\n                                    )}\r\n                                />\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default index;\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// 页面\r\nimport UserList from './UserList';\r\n\r\nclass ShopRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/user/list\" component={UserList}/>\r\n                <Redirect exact form=\"/user\" to=\"/user/list\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopRouter;","import React, { Component } from 'react'\r\nimport './../index.scss';\r\nimport showConfirm from '../../Components/TextModal';\r\nimport { Row, Col, Card, Table, Divider, Button } from 'antd';\r\nconst { Column } = Table;\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        ordernum: '01',\r\n        ordername: 'weChat',\r\n        time: '2019-1-1',\r\n        salecode: 'HSKC3647',\r\n        orderemail: '1231239@awd.com',\r\n        orderprice: '99',\r\n        ordercode: '待使用',\r\n    }\r\n];\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: 1,\r\n        }\r\n    }\r\n    //编辑用户\r\n    Edit = (record) => {\r\n        console.log(record)\r\n    }\r\n    //删除用户\r\n    Delete = (record) => {\r\n        showConfirm(record)\r\n        console.log(record)\r\n    }\r\n    //处理分页\r\n    onChange = page => {\r\n        console.log(page);\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" title=\"订单明细列表\">\r\n                            <Table\r\n                                dataSource={data}\r\n                                pagination={{\r\n                                    current: this.state.current,\r\n                                    pageSize: 6,\r\n                                    total: 30,\r\n                                    onChange: this.onChange\r\n                                }}\r\n                            >\r\n                                <Column title=\"订单商品编号\" dataIndex=\"ordernum\" key=\"ordernum\" />\r\n                                <Column title=\"订单账号\" dataIndex=\"ordername\" key=\"ordername\" />\r\n                                <Column title=\"订单日期\" dataIndex=\"time\" key=\"time\" />\r\n                                <Column title=\"渠道\" dataIndex=\"code\" key=\"code\" />\r\n                                <Column title=\"优惠券码\" dataIndex=\"salecode\" key=\"salecode\" />\r\n                                <Column title=\"订单邮箱\" dataIndex=\"orderemail\" key=\"orderemail\" />\r\n                                <Column title=\"订单金额\" dataIndex=\"orderprice\" key=\"orderprice\" />\r\n                                <Column title=\"状态\" dataIndex=\"ordercode\" key=\"ordercode\" />\r\n                                <Column\r\n                                    title=\"操作\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <span>\r\n                                            <Button size=\"small\" type=\"primary\" onClick={() => this.Edit(record)}>编辑 </Button>\r\n                                            <Divider type=\"vertical\" />\r\n                                            <Button size=\"small\" type=\"danger\" onClick={() => this.Delete(record)}>上架</Button>\r\n                                        </span>\r\n                                    )}\r\n                                />\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default index;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// 页面\r\nimport OrderList from './OrderList'\r\n\r\nclass DiscountRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/order/list\" component={OrderList} />\r\n                <Redirect exact form=\"/order\" to=\"/order/list\" />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiscountRouter;","import React, { Component } from \"react\";\r\nimport { warning, error } from \"./../../Components/Info\";\r\nimport \"./../index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { ShopListAction, ShopDisListAction } from \"./../../Store/actionCreators\";\r\nimport { addShopDiscountData, isAddShopData } from \"./../../Api\";\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Divider,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  DatePicker\r\n} from \"antd\";\r\nconst { Column } = Table;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 5 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 }\r\n  }\r\n};\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 1,\r\n      visible: false, // 添加券码modal\r\n      shopvisible: false, // 编辑商品modal\r\n      shopname: \"\", // 商品名称\r\n      shopcode: \"\", // 商品券码\r\n      shopdiscountnum: \"\", // 商品券码发放总量\r\n      shopdiscounttime: \"\", //有效期时间\r\n      shopitem: \"\", // 点击的商品列表\r\n    };\r\n  }\r\n  //处理分页\r\n  onChange = page => {\r\n    this.setState({\r\n      current: page\r\n    });\r\n  };\r\n  // 关闭添加券码模态框\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  // 关闭编辑商品模态框\r\n  shophandleCancel = e => {\r\n    this.setState({\r\n      shopvisible: false\r\n    });\r\n  };\r\n  //开启券码模态框\r\n  Add = record => {\r\n    this.setState({\r\n      visible: true,\r\n      shopcode: record.shopcode,\r\n      shopname: record.shopname\r\n    });\r\n  };\r\n  //开启商品编辑模态框\r\n  Edit = record => {\r\n    this.setState({\r\n      shopvisible: true,\r\n      shopitem: record,\r\n    });\r\n    console.log(record)\r\n  };\r\n  // 提交券码模态框数据 添加券码\r\n  handleOk() {\r\n    const {\r\n      shopcode,\r\n      shopname,\r\n      shopdiscounttime,\r\n      shopdiscountnum\r\n    } = this.state;\r\n    // const shopdiscountcode = this.refs.shopdiscountcode.state.value;\r\n    const shopdiscountcell = this.refs.shopdiscountcell.state.value;\r\n    if (\r\n      !shopcode ||\r\n      // !shopdiscountcode ||\r\n      !shopdiscounttime ||\r\n      !shopdiscountnum\r\n    ) {\r\n      warning(\"内容不能为空！\");\r\n      return;\r\n    }\r\n    let ShopCodeParams = new URLSearchParams();\r\n    ShopCodeParams.append(\"shopcode\", shopcode);\r\n    ShopCodeParams.append(\"shopname\", shopname);\r\n    ShopCodeParams.append(\"shopdiscountnum\", shopdiscountnum);\r\n    // ShopCodeParams.append(\"shopdiscountcode\", shopdiscountcode);\r\n    ShopCodeParams.append(\"shopdiscountcell\", shopdiscountcell);\r\n    ShopCodeParams.append(\"shopdiscounttime\", shopdiscounttime);\r\n    // 提交数据\r\n    addShopDiscountData(ShopCodeParams).then(res => {\r\n      if (res.data.status_code === 200) {\r\n        this.setState({ visible: false }, () => { this.props.history.push('/shop/discount/list'); });\r\n      } else {\r\n        error(\"添加券码失败\");\r\n      }\r\n    }).catch(err => {\r\n      error(\"添加券码发生错误\");\r\n    });\r\n  }\r\n  // 提交编辑商品模态框数据\r\n  shophandleOk() {\r\n    console.log('提交修改商品')\r\n  }\r\n  // 是否上下架\r\n  ShopShelf(source) {\r\n    const id = source._id\r\n    const shoppingshow = source.shoppingshow;\r\n    // 3.创建formData\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"shoppingshow\", shoppingshow);\r\n    isAddShopData(formData).then(res => {\r\n      if (res.data.status_code === 200) {\r\n        this.props._ShopListData();\r\n      } else {\r\n        error(`${shoppingshow}操作失败`);\r\n      }\r\n    });\r\n  }\r\n  // 停用 意味着下架\r\n  Stop(source) {\r\n    const id = source._id\r\n    const shoppingshow = \"true\";\r\n    // 3.创建formData\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"shoppingshow\", shoppingshow);\r\n    isAddShopData(formData).then(res => {\r\n      if (res.data.status_code === 200) {\r\n        this.props._ShopListData();\r\n      } else {\r\n        error(`停用操作失败`);\r\n      }\r\n    });\r\n  }\r\n  // 时间选择\r\n  onChange = (date, dateString) => {\r\n    this.setState({ shopdiscounttime: dateString });\r\n  };\r\n  render() {\r\n    const shopList = this.props.shopList;\r\n    shopList.forEach((item, index) => {\r\n      item.key = index + 1;\r\n      item.time = dayjs(item.time).format('YYYY-MM-DD HH:mm:ss')\r\n    });\r\n    console.log(this.props.shopdiscountList)\r\n    return (\r\n      <div className=\"home-container\">\r\n        <Row>\r\n          <Col span={24}>\r\n            {/* 列表 */}\r\n            <Card className=\"mg-top\" title=\"商品明细列表\">\r\n              <Table\r\n                dataSource={shopList}\r\n                pagination={{\r\n                  current: this.state.current,\r\n                  pageSize: 6,\r\n                  total: 30,\r\n                  onChange: this.onChange\r\n                }}\r\n              >\r\n                <Column title=\"商品Uid\" dataIndex=\"shopcode\" key=\"shopcode\" />\r\n                <Column title=\"商品名称\" dataIndex=\"shopname\" key=\"shopname\" />\r\n                <Column title=\"添加日期\" dataIndex=\"time\" key=\"time\" />\r\n                <Column\r\n                  title=\"商品价格\"\r\n                  dataIndex=\"shopprice\"\r\n                  key=\"shopprice\"\r\n                />\r\n                {/* <Column\r\n                  title=\"产品销量\"\r\n                  dataIndex=\"shopdefaultnum\"\r\n                  key=\"shopdefaultnum\"\r\n                /> */}\r\n                <Column\r\n                  title=\"上架状态\"\r\n                  dataIndex=\"shoppingshow\"\r\n                  key=\"shoppingshow\"\r\n                />\r\n                <Column\r\n                  title=\"适用地区\"\r\n                  dataIndex=\"shopaddress\"\r\n                  key=\"shopaddress\"\r\n                />\r\n                <Column\r\n                  title=\"操作\"\r\n                  key=\"action\"\r\n                  render={(text, record) => (\r\n                    <span>\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"primary\"\r\n                        onClick={() => this.Edit(record)}\r\n                        disabled={record.shoppingshow === \"停用\" ? true : false}\r\n                      >\r\n                        编辑\r\n                      </Button>\r\n                      <Divider type=\"vertical\" />\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"primary\"\r\n                        onClick={() => this.Add(record)}\r\n                        disabled={record.shoppingshow === \"未上架\" ? false : true}\r\n                      >\r\n                        添加券码\r\n                      </Button>\r\n                      <Divider type=\"vertical\" />\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"danger\"\r\n                        onClick={() => this.ShopShelf(record)}\r\n                        disabled={record.shoppingshow === \"未上架\" ? false : true}\r\n                      >\r\n                        {record.shoppingshow}\r\n                      </Button>\r\n                      <Divider type=\"vertical\" />\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"danger\"\r\n                        onClick={() => this.Stop(record)}\r\n                      >\r\n                        停用\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                />\r\n              </Table>\r\n            </Card>\r\n\r\n            {/* 添加券码模态框 */}\r\n            <Modal\r\n              title=\"添加商品券码\"\r\n              visible={this.state.visible}\r\n              onOk={() => this.handleOk()}\r\n              onCancel={this.handleCancel}\r\n            >\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"券码对应商品\">\r\n                  <Input value={this.state.shopcode} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"发放总量\">\r\n                  <InputNumber\r\n                    style={{ width: \"60%\" }}\r\n                    placeholder=\"请选择发放总量\"\r\n                    onChange={value => {\r\n                      this.setState({ shopdiscountnum: value });\r\n                    }}\r\n                    min={100}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"商品券码\">\r\n                  <Input\r\n                    placeholder=\"请输入商品券码\"\r\n                    style={{ width: \"60%\" }}\r\n                    ref=\"shopdiscountcode\"\r\n                    maxLength={8}\r\n                  />\r\n                  <Divider type=\"vertical\" />\r\n                  <span className=\"ant-form-text\">AKCH1234</span>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"使用门槛\">\r\n                  <Input placeholder=\"请输入使用门槛\" ref=\"shopdiscountcell\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"请选择有效期\" style={{ marginBottom: 0 }}>\r\n                  <Form.Item\r\n                    help=\"请选择有效期\"\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"calc(50% - 12px)\"\r\n                    }}\r\n                  >\r\n                    <DatePicker onChange={this.onChange} />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n\r\n            {/* 编辑商品模态框 */}\r\n            <Modal\r\n              title=\"编辑商品\"\r\n              visible={this.state.shopvisible}\r\n              onOk={() => this.shophandleOk()}\r\n              onCancel={this.shophandleCancel}\r\n            >\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"商品Uid\">\r\n                  <Input value={this.state.shopitem.shopcode} disabled />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"商品名称\">\r\n                  <Input value={this.state.shopitem.shopname} placeholder=\"请输入商品名称\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"商品价格\">\r\n                  <InputNumber\r\n                    placeholder=\"请输入商品价格\"\r\n                    style={{ width: \"50%\" }}\r\n                    ref=\"shopdiscountcode\"\r\n                    value={this.state.shopitem.shopprice}\r\n                    disabled\r\n                    min={50}\r\n                  />\r\n                  <Divider type=\"vertical\" />\r\n                  <span className=\"ant-form-text\">商品金额 谨慎修改</span>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"使用地区\">\r\n                  <Input placeholder=\"请输入使用地区\" ref=\"shopdiscountcell\" value={this.state.shopitem.shopaddress} />\r\n                </Form.Item>\r\n\r\n              </Form>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 商品列表数据\r\n    this.props._ShopListData();\r\n    // this.props._ShopLisDistData();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    shopList: state.shopList,\r\n    shopdiscountList: state.shopdiscountList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _ShopListData() {\r\n      dispatch(ShopListAction());\r\n    },\r\n    // _ShopLisDistData() {\r\n    //   dispatch(ShopDisListAction());\r\n    // }\r\n    // dispatch(ShopDisListAction());\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Index);\r\n","import React, { Component } from 'react'\r\nimport { warning, error } from './../../Components/Info';\r\nimport { addShopData } from './../../Api';\r\nimport './../index.scss';\r\nimport { Row, Col, Card, Form, Input, InputNumber, Button } from 'antd';\r\nconst { TextArea } = Input;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shopprice: 10,\r\n            shopsaleprice: 10,\r\n            shopdefaultnum: 10,\r\n            shopdaynum: 10,\r\n            shopdetail: ''\r\n        }\r\n    }\r\n    render() {\r\n        const { shopprice, shopsaleprice, shopdefaultnum, shopdaynum } = this.state;\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" title=\"添加商品\">\r\n                            <Row>\r\n                                <Col span={14}>\r\n                                    <Form {...formItemLayout}>\r\n\r\n                                        <Form.Item label=\"上传封面图\">\r\n                                            <input type=\"file\" ref=\"shopfile\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"商品名称\">\r\n                                            <Input placeholder=\"请输入商品名称\" ref=\"shopname\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"商品编号\">\r\n                                            <Input placeholder=\"请输入商品编号\" ref=\"shopcode\" maxLength={8} style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"商品原价\">\r\n                                            <InputNumber defaultValue={shopprice} style={{ width: '60%' }} onChange={(value) => { this.setState({ shopprice: value }) }} placeholder=\"请选择商品原价\" min={10} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"商品优惠价\">\r\n                                            <InputNumber defaultValue={shopsaleprice} style={{ width: '60%' }} onChange={(value) => { this.setState({ shopsaleprice: value }) }} placeholder=\"请选择商品优惠价\" min={10} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"默认销量\">\r\n                                            <InputNumber defaultValue={shopdefaultnum} style={{ width: '60%' }} onChange={(value) => { this.setState({ shopdefaultnum: value }) }} placeholder=\"请选择默认销量\" min={10} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"每日销量\">\r\n                                            <InputNumber defaultValue={shopdaynum} style={{ width: '60%' }} onChange={(value) => { this.setState({ shopdaynum: value }) }} placeholder=\"请选择每日销量\" min={10} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"适用地区\">\r\n                                            <Input placeholder=\"请输入适用地区\" ref=\"shopaddress\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"编辑产品详情\" style={{ marginBottom: 0 }}>\r\n                                            <TextArea\r\n                                                placeholder=\"请按如下规范条数罗列 例如： 1.xxxx 2.xxx\"\r\n                                                autosize={{ minRows: 2, maxRows: 6 }}\r\n                                                onChange={({ target: { value } }) => { this.setState({ shopdetail: value }) }}\r\n                                            />\r\n                                        </Form.Item>\r\n\r\n                                        <Button type=\"primary\" onClick={() => this._dealWithClick()} >提交生成</Button>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col span={10}>2</Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n    //提交信息  \r\n    _dealWithClick() {\r\n        // 1. 获取用户输入的内容\r\n        const { shopprice, shopsaleprice, shopdefaultnum, shopdaynum, shopdetail } = this.state;\r\n        const shopfile = this.refs.shopfile.files[0];\r\n        const shopname = this.refs.shopname.state.value;\r\n        const shopcode = this.refs.shopcode.state.value;\r\n        const shopaddress = this.refs.shopaddress.state.value;\r\n        console.log(shopfile, shopname, shopprice, shopsaleprice, shopdefaultnum, shopdaynum, shopaddress, shopdetail);\r\n\r\n        // 2. 验证数据不为空\r\n        if (!shopprice || !shopsaleprice || !shopdefaultnum || !shopdaynum || !shopdetail || !shopfile || !shopname || !shopaddress || !shopcode) {\r\n            warning('输入的内容不能为空！');\r\n            return;\r\n        }\r\n        // 3.创建formData\r\n        let formData = new FormData();\r\n        formData.append('shopfile', shopfile);\r\n        formData.append('shopname', shopname);\r\n        formData.append('shopcode', shopcode);\r\n        formData.append('shopprice', shopprice);\r\n        formData.append('shopsaleprice', shopsaleprice);\r\n        formData.append('shopdefaultnum', shopdefaultnum);\r\n        formData.append('shopdaynum', shopdaynum);\r\n        formData.append('shopaddress', shopaddress);\r\n        formData.append('shopdetail', shopdetail);\r\n        // 提价数据\r\n        addShopData(formData).then(res => {\r\n            if (res.data.status_code === 200) {\r\n                this.props.history.push('/shop/list');\r\n            }\r\n        }).catch(err => {\r\n            error('添加数据失败！请重试')\r\n        })\r\n    }\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from \"react\";\r\nimport \"./../index.scss\";\r\nimport showConfirm from \"../../Components/TextModal\";\r\nimport { connect } from \"react-redux\";\r\nimport { ShopDisListAction } from \"./../../Store/actionCreators\";\r\nimport { Row, Col, Card, Table, Divider, Button } from \"antd\";\r\nconst { Column } = Table;\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 1\r\n    };\r\n  }\r\n  //编辑用户\r\n  Edit = record => {\r\n    console.log(record);\r\n  };\r\n  //删除用户\r\n  Delete = record => {\r\n    showConfirm(record);\r\n    console.log(record);\r\n  };\r\n  //处理分页\r\n  onChange = page => {\r\n    this.setState({\r\n      current: page\r\n    });\r\n  };\r\n  render() {\r\n    const shopDisList = this.props.shopdiscountList;\r\n    shopDisList.forEach((item, index) => {\r\n      item.key = index + 1;\r\n    });\r\n    return (\r\n      <div className=\"home-container\">\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"mg-top\" title=\"商品券码明细列表\">\r\n              <Table\r\n                dataSource={shopDisList}\r\n                pagination={{\r\n                  current: this.state.current,\r\n                  pageSize: 6,\r\n                  total: 30,\r\n                  onChange: this.onChange\r\n                }}\r\n              >\r\n                <Column\r\n                  title=\"券码商品Uid\"\r\n                  dataIndex=\"shopcode\"\r\n                  key=\"shopcode\"\r\n                />\r\n                <Column\r\n                  title=\"券码适用商品\"\r\n                  dataIndex=\"shopname\"\r\n                  key=\"shopname\"\r\n                />\r\n                {/* <Column\r\n                  title=\"券码数量\"\r\n                  dataIndex=\"shopdiscountnum\"\r\n                  key=\"shopdiscountnum\"\r\n                /> */}\r\n                <Column\r\n                  title=\"发放总量\"\r\n                  dataIndex=\"shopdiscountnum\"\r\n                  key=\"shopdiscountnum\"\r\n                />\r\n                <Column\r\n                  title=\"已使用\"\r\n                  dataIndex=\"shopdefalutnum\"\r\n                  key=\"shopdefalutnum\"\r\n                />\r\n                <Column\r\n                  title=\"使用门槛\"\r\n                  dataIndex=\"shopdiscountcell\"\r\n                  key=\"shopdiscountcell\"\r\n                />\r\n                <Column\r\n                  title=\"有效期截至\"\r\n                  dataIndex=\"shopdiscounttime\"\r\n                  key=\"shopdiscounttime\"\r\n                />\r\n                <Column\r\n                  title=\"操作\"\r\n                  key=\"action\"\r\n                  render={(text, record) => (\r\n                    <span>\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"primary\"\r\n                        onClick={() => this.Edit(record)}\r\n                      >\r\n                        编辑{\" \"}\r\n                      </Button>\r\n                      <Divider type=\"vertical\" />\r\n                      <Button\r\n                        size=\"small\"\r\n                        type=\"danger\"\r\n                        onClick={() => this.Delete(record)}\r\n                      >\r\n                        删除\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                />\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n      this.props._ShopDisListData()\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    shopdiscountList: state.shopdiscountList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _ShopDisListData() {\r\n      dispatch(ShopDisListAction());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Index);\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// 页面\r\nimport ShopList from './ShopList';\r\nimport AddShop from './AddShop';\r\nimport ShopDiscountList from './ShopDiscountList';\r\n\r\nclass ShopRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/shop/list\" component={ShopList}/>\r\n                <Route path=\"/shop/add\" component={AddShop}/>\r\n                <Route path=\"/shop/discount/list\" component={ShopDiscountList}/>\r\n                <Redirect exact form=\"/shop\" to=\"/shop/list\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopRouter;","import React, { Component } from 'react'\r\nimport './../index.scss';\r\nimport showConfirm from '../../Components/TextModal';\r\nimport { Row, Col, Card ,Table, Divider, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport {ShopSaleAction} from './../../Store/actionCreators';\r\nconst { Column } = Table;\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: 1,\r\n        }\r\n    }\r\n    //编辑用户\r\n    Edit = (record) => {\r\n        console.log(record)\r\n    }\r\n    //删除用户\r\n    Delete = (record) => {\r\n        showConfirm(record)\r\n        console.log(record)\r\n    }\r\n    //处理分页\r\n    onChange = page => {\r\n        console.log(page);\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    };\r\n    render() {\r\n        const shopSaleList = this.props.shopsaleList;\r\n        shopSaleList.forEach((item, index) => {\r\n            item.key = index + 1;\r\n        });\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" title=\"抵扣券明细列表\">\r\n                            <Table\r\n                                dataSource={shopSaleList}\r\n                                pagination={{\r\n                                    current: this.state.current,\r\n                                    pageSize: 6,\r\n                                    total: 30,\r\n                                    onChange: this.onChange\r\n                                }}\r\n                            >\r\n                                <Column title=\"优惠券名称\" dataIndex=\"salename\" key=\"salename\" />\r\n                                <Column title=\"外放对象\" dataIndex=\"saleobj\" key=\"saleobj\" />\r\n                                <Column title=\"抵扣商品范围\" dataIndex=\"saleisarr\" key=\"saleisarr\" />\r\n                                <Column title=\"折扣金额\" dataIndex=\"saleprice\" key=\"saleprice\" />\r\n                                <Column title=\"折扣券数量\" dataIndex=\"salenum\" key=\"salenum\" />\r\n                                <Column title=\"有效期截至\" dataIndex=\"saletime\" key=\"saletime\" />\r\n                                <Column\r\n                                    title=\"操作\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <span>\r\n                                            <Button size=\"small\" type=\"primary\" onClick={() => this.Edit(record)}>编辑 </Button>\r\n                                            <Divider type=\"vertical\" />\r\n                                            <Button size=\"small\" type=\"danger\" onClick={() => this.Delete(record)}>禁用</Button>\r\n                                        </span>\r\n                                    )}\r\n                                />\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props._ShopSaleData()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        shopsaleList: state.shopsaleList,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      _ShopSaleData() {\r\n        dispatch(ShopSaleAction());\r\n      }\r\n    };\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Index);","import React, { Component } from \"react\";\r\nimport { warning, error } from \"./../../Components/Info\";\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox, Divider } from \"antd\";\r\nimport { ShopListAction } from \"./../../Store/actionCreators\";\r\nimport {addShopSaleData} from './../../Api'\r\nimport \"./../index.scss\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  InputNumber,\r\n  Button\r\n} from \"antd\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 5 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 }\r\n  }\r\n};\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleisarr: \"\", //使用范围\r\n      saleprice: \"\", //抵扣金额\r\n      salenum:\"\",// 抵扣数量\r\n      saletime:\"\"// 抵扣券有效期\r\n    };\r\n  }\r\n  // 商品适用范围选择\r\n  onChange = checkedValues => {\r\n    this.setState({ saleisarr: checkedValues });\r\n  };\r\n  // 时间选择\r\n  onTimeChange = (date, dateString) => {\r\n    this.setState({ saletime: dateString });\r\n  };\r\n  render() {\r\n    // 添加可抵扣商品范围\r\n    let ListData = this.props.shopList.filter(\r\n      item => item.shoppingshow === \"已上架\"\r\n    );\r\n    let plainOptions = [];\r\n    ListData.forEach((item, index) => {\r\n      plainOptions.push(item.shopname);\r\n    });\r\n    return (\r\n      <div className=\"home-container\">\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"mg-top\" title=\"生成抵扣券\">\r\n              <Col span={16}>\r\n                <Form {...formItemLayout}>\r\n                  <Form.Item label=\"优惠券名称\">\r\n                    <Input\r\n                      placeholder=\"请输入优惠券名称\"\r\n                      ref=\"salename\"\r\n                      maxLength={4}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"外放对象\">\r\n                    <Input\r\n                      placeholder=\"请输入外放对象\"\r\n                      ref=\"saleobj\"\r\n                      maxLength={6}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"抵扣商品范围\">\r\n                    <Checkbox.Group\r\n                      options={plainOptions}\r\n                      onChange={value => this.onChange(value)}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"抵扣金额\">\r\n                    <InputNumber\r\n                      style={{ width: \"45%\" }}\r\n                      placeholder=\"请选择抵扣金额\"\r\n                      onChange={(value) => { this.setState({ saleprice: value }) }}\r\n                      min={10}\r\n                    />\r\n                    <Divider type=\"vertical\" />\r\n                    <span className=\"ant-form-text\">折扣金额 请谨慎填写 </span>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"设置优惠券码数量\">\r\n                    <InputNumber\r\n                      style={{ width: \"45%\" }}\r\n                      placeholder=\"请输入生成券码数量 \"\r\n                      onChange={(value) => { this.setState({ salenum: value }) }}\r\n                      min={100}\r\n                    />\r\n                     <Divider type=\"vertical\" />\r\n                    <span className=\"ant-form-text\">默认规则 - gc04f55b </span>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"请选择有效期\" style={{ marginBottom: 0 }}>\r\n                    <Form.Item\r\n                      help=\"请选择有效期\"\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                        width: \"calc(50% - 12px)\"\r\n                      }}\r\n                    >\r\n                      <DatePicker onChange={this.onTimeChange} />\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n\r\n                  <Button type=\"primary\" onClick={()=>this._dealWithClick()}>提交生成</Button>\r\n                </Form>\r\n              </Col>\r\n              <Col span={8}>1</Col>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 提交抵扣券\r\n  _dealWithClick(){\r\n    const {saleisarr,saleprice,salenum,saletime} = this.state;\r\n    const salename = this.refs.salename.state.value;\r\n    const saleobj = this.refs.saleobj.state.value;\r\n    console.log(salename,saleobj,saleisarr,saleprice,salenum,saletime)\r\n    if (\r\n      !salename ||\r\n      !saleobj ||\r\n      !saleisarr ||\r\n      !saleprice ||\r\n      !salenum ||\r\n      !saletime\r\n    ) {\r\n      warning(\"内容不能为空！\");\r\n      return;\r\n    }\r\n    let ShopSaleParams = new URLSearchParams();\r\n    ShopSaleParams.append(\"salename\", salename);\r\n    ShopSaleParams.append(\"saleobj\", saleobj);\r\n    ShopSaleParams.append(\"saleisarr\", saleisarr);\r\n    ShopSaleParams.append(\"saleprice\", saleprice);\r\n    ShopSaleParams.append(\"salenum\", salenum);\r\n    ShopSaleParams.append(\"saletime\", saletime);\r\n    \r\n    // 发起请求\r\n    addShopSaleData(ShopSaleParams).then(res=>{\r\n      if (res.data.status_code === 200) {\r\n        this.props.history.push('/discount/list');\r\n      } else {\r\n        error(\"添加抵扣券失败\");\r\n      }\r\n    }).catch(err=>{\r\n      error(\"添加抵扣券失败\");\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props._ShopListData();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    shopList: state.shopList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _ShopListData() {\r\n      dispatch(ShopListAction());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Index);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// 页面\r\nimport DiscountList from './DiscountList'\r\nimport AddDiscount from './AddDiscount'\r\n\r\nclass DiscountRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/discount/list\" component={DiscountList} />\r\n                <Route path=\"/discount/add\" component={AddDiscount} />\r\n                <Redirect exact form=\"/discount\" to=\"/discount/list\" />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiscountRouter;","import React, { Component } from 'react'\r\nimport './../index.scss';\r\nimport { Row, Col, Card, Table, Input, Button } from 'antd';\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        usercode: '20190730101001',\r\n        shopcode: '01',\r\n        wechat: '微信账号',\r\n        time: '2019-1-1',\r\n        placecode: 'ZS20190730',\r\n        salecode: 'AKJBANK0961',\r\n        price: '99',\r\n        code: '待使用',\r\n    }\r\n];\r\nclass index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <Row>\r\n                    <Col span={24} >\r\n                        <Card className=\"mg-top\" >\r\n                            <Col span={6}>\r\n                                <Search\r\n                                    placeholder=\"请输入优惠券码\"\r\n                                    enterButton=\"Search\"\r\n                                    size=\"large\"\r\n                                    onSearch={value => console.log(value)}\r\n                                />\r\n                            </Col>\r\n                            <Button type=\"primary\" size=\"large\">确认核销</Button>\r\n                        </Card>\r\n                        <Card className=\"mg-top\" title=\"优惠券核销\">\r\n                            <Table dataSource={data}>\r\n                                <Column title=\"订单编号\" dataIndex=\"usercode\" key=\"usercode\" />\r\n                                <Column title=\"订单商品编号\" dataIndex=\"shopcode\" key=\"shopcode\" />\r\n                                <Column title=\"订单账号\" dataIndex=\"wechat\" key=\"wechat\" />\r\n                                <Column title=\"订单日期\" dataIndex=\"time\" key=\"time\" />\r\n                                <Column title=\"邀请码\" dataIndex=\"placecode\" key=\"placecode\" />\r\n                                <Column title=\"优惠券码\" dataIndex=\"salecode\" key=\"salecode\" />\r\n                                <Column title=\"状态\" dataIndex=\"code\" key=\"code\" />\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default index;\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// 页面\r\nimport Remove from './Remove';\r\n\r\nclass RemoveRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/remove/item\" component={Remove}/>\r\n                <Redirect exact form=\"/remove\" to=\"/remove/item\"/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RemoveRouter;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as Types from './Store/action-Types';\r\nimport './App.scss';\r\n\r\nimport Index_Out from './pages/Out'\r\nimport Login from './Components/Login'\r\n\r\n//内容区域面板\r\nimport Echarts from './pages/Echarts/router';\r\nimport Admin from './pages/Home/router';\r\nimport User from './pages/User/router';\r\nimport Order from './pages/Order/router';\r\nimport Shopping from './pages/Shopping/router';\r\nimport Discount from './pages/Discount/router';\r\nimport Remove from './pages/Remove/router';\r\n\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    this.props._Login()\r\n  }\r\n  render() {\r\n    //主面板\r\n    const Index = (\r\n      <Index_Out >\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Echarts} />\r\n          <Route path=\"/home\" component={Admin} />\r\n          <Route path=\"/user\" component={User} />\r\n          <Route path=\"/order\" component={Order} />\r\n          <Route path=\"/shop\" component={Shopping} />\r\n          <Route path=\"/discount\" component={Discount} />\r\n          <Route path=\"/remove\" component={Remove} />\r\n        </Switch>\r\n      </Index_Out>\r\n    )\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={\r\n              this.props.payload ? (props) => Index : () => <Redirect to=\"/login\" push />\r\n            }\r\n          />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" render={props => Index} />\r\n        </Switch>\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    _Login() {\r\n      const payload = JSON.parse(sessionStorage.getItem('userData'));\r\n      dispatch({\r\n        type: Types.ADMIN_LOGIN,\r\n        payload\r\n      })\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    payload: state.admin\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as Types from \"./action-Types\";\r\n\r\nconst initvalState = {\r\n  //超级管理员\r\n  admin: {},\r\n  //管理成员列表\r\n  adminlist: [],\r\n  //商品列表\r\n  shopList: [],\r\n  //商品券码列表\r\n  shopdiscountList: [],\r\n  //商品抵扣券列表\r\n  shopsaleList: [],\r\n};\r\n\r\nexport default (state = initvalState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case Types.ADMIN_LOGIN:\r\n      const newstate = JSON.parse(JSON.stringify(initvalState));\r\n      newstate.admin = action.payload;\r\n      // 登陆数据本地化\r\n      sessionStorage.setItem(\"userData\", JSON.stringify(action.payload));\r\n      return newstate;\r\n    case Types.ADMIN_LIST:\r\n      const adminstate = JSON.parse(JSON.stringify(initvalState));\r\n      adminstate.adminlist = action.payload;\r\n      return adminstate;\r\n    case Types.SHOP_LIST:\r\n      const shopliststate = JSON.parse(JSON.stringify(initvalState));\r\n      shopliststate.shopList = action.payload;\r\n      return shopliststate;\r\n    case Types.SHOP_DISCOUNT_LIST:\r\n      const shopdisliststate = JSON.parse(JSON.stringify(initvalState));\r\n      shopdisliststate.shopdiscountList = action.payload;\r\n      return shopdisliststate;\r\n    case Types.SHOP_SALE_LIST:\r\n      const shopsalestate = JSON.parse(JSON.stringify(initvalState));\r\n      shopsalestate.shopsaleList = action.payload;\r\n      return shopsalestate;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers =window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(reducer, enhancer)\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store';\r\nconst Index = () => (<Provider store={store}><App /></Provider>)\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}